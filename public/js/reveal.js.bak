(()=>{const reduce=matchMedia('(prefers-reduced-motion: reduce)').matches;
if(reduce){document.querySelectorAll('.r').forEach(n=>n.classList.add('in'));return;}
const io=new IntersectionObserver((es,o)=>{es.forEach(e=>{if(e.isIntersecting){
  const el=e.target; if(el.hasAttribute('data-stagger')){[...el.children].forEach((c,i)=>c.style.setProperty('--i',i))}
  el.classList.add('in'); o.unobserve(el);
}})},{rootMargin:'0px 0px -10% 0px',threshold:.15});
document.querySelectorAll('.r').forEach(el=>io.observe(el));
})();
