---
interface P { title: string; cats: string[]; desc?: string }
const { categories = [] as string[], projects = [] as P[] } = Astro.props;
---
<section class="caseboards r" aria-label="Caseboards">
  <div class="chips" role="tablist" aria-label="Filter projects">
    <button class="chip active" data-cat="all" role="tab" aria-selected="true">All</button>
    {categories.map(c => <button class="chip" data-cat={c} role="tab">{c}</button>)}
  </div>
  <div class="grid">
    {projects.map((p,i)=>(
      <article class="card show" data-cats={p.cats.join(',')} style={`--i:${i}`}>
        <h4>{p.title}</h4>
        {p.desc && <p>{p.desc}</p>}
      </article>
    ))}
  </div>
  <style>
    .chips{display:flex;flex-wrap:wrap;gap:8px;margin:8px 0 16px}
    .chip{padding:6px 12px;border:1px solid currentColor;border-radius:999px;background:transparent;opacity:.8}
    .chip.active{opacity:1;font-weight:600}
    .grid{display:grid;grid-template-columns:1fr;gap:14px}
    @media(min-width:720px){.grid{grid-template-columns:repeat(3,minmax(0,1fr))}}
    .card{padding:14px;border:1px solid rgba(0,0,0,.12);border-radius:10px;transform:scale(.98);opacity:0;transition:transform .25s ease,opacity .25s ease}
    .card.show{opacity:1;transform:scale(1)}
    @media(prefers-reduced-motion:reduce){.card,.grid{transition:none!important;transform:none!important;opacity:1!important}}
  </style>
  <script is:inline>
    const chips=[...document.querySelectorAll('.caseboards .chip')];
    const cards=[...document.querySelectorAll('.caseboards .card')];
    chips.forEach(b=>b.addEventListener('click',()=>{
      chips.forEach(c=>{c.classList.toggle('active',c===b);c.setAttribute('aria-selected',c===b?'true':'false')});
      const cat=b.dataset.cat;
      cards.forEach(card=>{
        const cats=(card.dataset.cats||'').split(',').map(s=>s.trim());
        card.classList.toggle('show', cat==='all'||cats.includes(cat));
      });
    }));
  </script>
</section>
